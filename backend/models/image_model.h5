import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

def create_image_model():
    model = Sequential([
        Conv2D(32, (3, 3), activation='relu', input_shape=(128, 128, 3)),  # Filtros, tamaño del kernel, función de activación
        MaxPooling2D((2, 2)),  # Tamaño del pool
        Conv2D(64, (3, 3), activation='relu'),
        MaxPooling2D((2, 2)),
        Conv2D(128, (3, 3), activation='relu'),
        MaxPooling2D((2, 2)),
        Flatten(),
        Dense(128, activation='relu'),  # Número de unidades en la capa densa, función de activación
        Dense(1, activation='sigmoid')  # Número de unidades en la capa de salida, función de activación
    ])
    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])  # Optimizador, función de pérdida, métricas
    return model

image_model = create_image_model()
image_model.save('models/image_model.h5')
